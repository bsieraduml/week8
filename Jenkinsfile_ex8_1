podTemplate(yaml: '''
    apiVersion: v1
    kind: Pod
    spec:
      containers:
      - name: gradle
        image: gradle:8-jdk8
        command:
        - sleep
        args:
        - 99d
        volumeMounts:
        - name: shared-storage
          mountPath: /mnt        
      - name: centos
        image: centos
        command:
        - sleep
        args:
        - 99d
      restartPolicy: Never
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: jenkins-pv-claim
      - name: kaniko-secret
        secret:
            secretName: dockercred
            items:
            - key: .dockerconfigjson
              path: config.json
''') {
  node(POD_LABEL) {

  stage('k8s') {
    git branch: 'main', url: 'https://github.com/bsieraduml/week8.git'
    container('centos') {
      stage('start calculator') {
        sh '''
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        ./kubectl apply -f calculator.yaml
        ./kubectl apply -f hazelcast.yaml
          '''
        }
      }
    }

stage('Build a gradle project') {
      git branch: 'main', url: 'https://github.com/bsieraduml/week8.git'
      container('gradle') {

        stage("Acceptance Testing") {
            //exercise 8 part 1 test via curl

              try {
                sh '''
                echo 'try curl'
                pwd
                ls -lart
                ls -lart
                test $(curl calculator-service:8080/sum?a=6\\&b=2) -eq 8 && echo '6 plus 2 == 8 pass (expected)' || echo '6 plus 2 == 8 fail'
                test $(curl calculator-service:8080/div?a=10\\&b=5) -eq 2 && echo '10 divided by 5 == 2 pass (expected)' || echo '10 divided by 5 == 2 fail'
                test $(curl calculator-service:8080/div?a=10\\&b=0) -eq 2 && echo '10 divided by 0 == 2 pass (not expected)' || echo '10 divided by 0 != 2 fail (expected)'

                  '''
              } catch (Exception E) {
                  echo 'Failure detected'
              }

        } // stage code coverage  
      }
    }        

  } // NODE pod label
} //root